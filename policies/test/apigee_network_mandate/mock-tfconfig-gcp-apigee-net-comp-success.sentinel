import "strings"

providers = {
	"google": {
		"alias": "",
		"config": {
			"project": {
				"references": [
					"var.project_id",
				],
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/google",
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  "",
	},
}

resources = {
	"data.google_project.project": {
		"address":             "data.google_project.project",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "",
		"name":                "project",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_project",
	},
	"google_apigee_envgroup.env_grp_dev": {
		"address": "google_apigee_envgroup.env_grp_dev",
		"config": {
			"hostnames": {
				"constant_value": [
					"grp.test.com",
				],
			},
			"name": {
				"constant_value": "tf-dev-internal",
			},
			"org_id": {
				"references": [
					"google_apigee_organization.apigeex_org.id",
					"google_apigee_organization.apigeex_org",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "env_grp_dev",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_apigee_envgroup",
	},
	"google_apigee_environment.apigee_org_region_env": {
		"address": "google_apigee_environment.apigee_org_region_env",
		"config": {
			"description": {
				"constant_value": "apigee-env-dev",
			},
			"display_name": {
				"constant_value": "apigee-env-dev",
			},
			"name": {
				"constant_value": "apigee-env-dev",
			},
			"org_id": {
				"references": [
					"google_apigee_organization.apigeex_org.id",
					"google_apigee_organization.apigeex_org",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apigee_org_region_env",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_apigee_environment",
	},
	"google_apigee_instance.apigee_instance": {
		"address": "google_apigee_instance.apigee_instance",
		"config": {
			"location": {
				"constant_value": "us-east1",
			},
			"name": {
				"constant_value": "apigee-org-instance-us-east1",
			},
			"org_id": {
				"references": [
					"google_apigee_organization.apigeex_org.id",
					"google_apigee_organization.apigeex_org",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apigee_instance",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_apigee_instance",
	},
	"google_apigee_instance_attachment.apigee_instance_attachment": {
		"address": "google_apigee_instance_attachment.apigee_instance_attachment",
		"config": {
			"environment": {
				"references": [
					"google_apigee_environment.apigee_org_region_env.name",
					"google_apigee_environment.apigee_org_region_env",
				],
			},
			"instance_id": {
				"references": [
					"google_apigee_instance.apigee_instance.id",
					"google_apigee_instance.apigee_instance",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apigee_instance_attachment",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_apigee_instance_attachment",
	},
	"google_apigee_organization.apigeex_org": {
		"address": "google_apigee_organization.apigeex_org",
		"config": {
			"analytics_region": {
				"constant_value": "us-east1",
			},
			"authorized_network": {
				"references": [
					"google_compute_network.apigee_network.id",
					"google_compute_network.apigee_network",
				],
			},
			"project_id": {
				"references": [
					"var.project_id",
				],
			},
		},
		"count": {},
		"depends_on": [
			"google_service_networking_connection.apigee_vpc_connection",
		],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apigeex_org",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_apigee_organization",
	},
	"google_compute_forwarding_rule.apigee_ilb_target_service": {
		"address": "google_compute_forwarding_rule.apigee_ilb_target_service",
		"config": {
			"all_ports": {
				"constant_value": true,
			},
			"backend_service": {
				"references": [
					"google_compute_region_backend_service.producer_service_backend.id",
					"google_compute_region_backend_service.producer_service_backend",
				],
			},
			"load_balancing_scheme": {
				"constant_value": "INTERNAL",
			},
			"name": {
				"constant_value": "apigee-forwarding-rule",
			},
			"network": {
				"references": [
					"google_compute_network.apigee_network.id",
					"google_compute_network.apigee_network",
				],
			},
			"project": {
				"references": [
					"var.project_id",
				],
			},
			"region": {
				"constant_value": "us-east1",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apigee_ilb_target_service",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_forwarding_rule",
	},
	"google_compute_global_address.apigee_range": {
		"address": "google_compute_global_address.apigee_range",
		"config": {
			"address_type": {
				"constant_value": "INTERNAL",
			},
			"name": {
				"constant_value": "apigee-range",
			},
			"network": {
				"references": [
					"google_compute_network.apigee_network.id",
					"google_compute_network.apigee_network",
				],
			},
			"prefix_length": {
				"constant_value": 16,
			},
			"purpose": {
				"constant_value": "VPC_PEERING",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apigee_range",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_global_address",
	},
	"google_compute_health_check.producer_service_health_check": {
		"address": "google_compute_health_check.producer_service_health_check",
		"config": {
			"check_interval_sec": {
				"constant_value": 1,
			},
			"name": {
				"constant_value": "producer-service-health-check",
			},
			"project": {
				"references": [
					"var.project_id",
				],
			},
			"tcp_health_check": [
				{
					"port": {
						"constant_value": "80",
					},
				},
			],
			"timeout_sec": {
				"constant_value": 1,
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "producer_service_health_check",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_health_check",
	},
	"google_compute_network.apigee_network": {
		"address": "google_compute_network.apigee_network",
		"config": {
			"name": {
				"constant_value": "apigee-network",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apigee_network",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_network",
	},
	"google_compute_region_backend_service.producer_service_backend": {
		"address": "google_compute_region_backend_service.producer_service_backend",
		"config": {
			"health_checks": {
				"references": [
					"google_compute_health_check.producer_service_health_check.id",
					"google_compute_health_check.producer_service_health_check",
				],
			},
			"name": {
				"constant_value": "producer-service",
			},
			"project": {
				"references": [
					"var.project_id",
				],
			},
			"region": {
				"constant_value": "us-east1",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "producer_service_backend",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_compute_region_backend_service",
	},
	"google_project_service.apis": {
		"address": "google_project_service.apis",
		"config": {
			"disable_on_destroy": {
				"constant_value": false,
			},
			"project": {
				"references": [
					"var.project_id",
				],
			},
			"service": {
				"references": [
					"each.key",
				],
			},
		},
		"count":      {},
		"depends_on": [],
		"for_each": {
			"references": [
				"local.googleapis",
			],
		},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apis",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_project_service",
	},
	"google_service_networking_connection.apigee_vpc_connection": {
		"address": "google_service_networking_connection.apigee_vpc_connection",
		"config": {
			"network": {
				"references": [
					"google_compute_network.apigee_network.id",
					"google_compute_network.apigee_network",
				],
			},
			"reserved_peering_ranges": {
				"references": [
					"google_compute_global_address.apigee_range.name",
					"google_compute_global_address.apigee_range",
				],
			},
			"service": {
				"constant_value": "servicenetworking.googleapis.com",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "apigee_vpc_connection",
		"provider_config_key": "google",
		"provisioners":        [],
		"type":                "google_service_networking_connection",
	},
}

provisioners = {}

variables = {
	"project_id": {
		"default":        null,
		"description":    "",
		"module_address": "",
		"name":           "project_id",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
